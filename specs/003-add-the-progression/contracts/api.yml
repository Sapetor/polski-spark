openapi: 3.0.0
info:
  title: Polski Spark Progression API
  version: 1.0.0
  description: API for user progression tracking and difficulty management

paths:
  /api/users/{userId}/progression:
    get:
      summary: Get user progression data
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User progression data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProgression'
        '404':
          description: User not found

  /api/users/{userId}/progression/update:
    post:
      summary: Update user progression after session
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionProgressionUpdate'
      responses:
        '200':
          description: Progression updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressionUpdateResponse'
        '400':
          description: Invalid session data
        '404':
          description: User not found

  /api/decks/{deckId}/cards/by-difficulty:
    get:
      summary: Get cards filtered by difficulty level
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: integer
        - name: minDifficulty
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100
        - name: maxDifficulty
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Cards within difficulty range
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardWithDifficulty'
        '404':
          description: Deck not found

  /api/cards/{cardId}/difficulty:
    get:
      summary: Get difficulty score for a specific card
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Card difficulty data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDifficulty'
        '404':
          description: Card not found

  /api/progression/levels:
    get:
      summary: Get level progression information
      responses:
        '200':
          description: Level progression data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelProgression'

components:
  schemas:
    UserProgression:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        level:
          type: integer
          minimum: 1
          maximum: 50
        xp:
          type: integer
          minimum: 0
        streak:
          type: integer
          minimum: 0
        currentDifficulty:
          type: integer
          minimum: 0
          maximum: 100
        totalSessions:
          type: integer
          minimum: 0
        totalCorrectAnswers:
          type: integer
          minimum: 0
        totalQuestionsAnswered:
          type: integer
          minimum: 0
        lastSessionDate:
          type: string
          format: date
        levelUpDate:
          type: string
          format: date-time
          nullable: true
        accuracy:
          type: number
          format: float
          minimum: 0
          maximum: 100
        xpToNextLevel:
          type: integer
          minimum: 0
        difficultyRange:
          type: object
          properties:
            min:
              type: integer
            max:
              type: integer

    SessionProgressionUpdate:
      type: object
      required:
        - questionsAnswered
        - correctAnswers
        - sessionDuration
      properties:
        questionsAnswered:
          type: integer
          minimum: 1
        correctAnswers:
          type: integer
          minimum: 0
        sessionDuration:
          type: integer
          description: Session duration in seconds
          minimum: 1
        startingDifficulty:
          type: integer
          minimum: 0
          maximum: 100
        averageCardDifficulty:
          type: number
          format: float
          minimum: 0
          maximum: 100

    ProgressionUpdateResponse:
      type: object
      properties:
        success:
          type: boolean
        xpEarned:
          type: integer
        levelUp:
          type: boolean
        newLevel:
          type: integer
        newXp:
          type: integer
        streakUpdated:
          type: boolean
        newStreak:
          type: integer
        difficultyAdjusted:
          type: boolean
        newDifficulty:
          type: integer
        celebrationData:
          type: object
          properties:
            type:
              type: string
              enum: [level_up, streak_milestone, xp_milestone]
            message:
              type: string
            milestone:
              type: integer

    CardWithDifficulty:
      type: object
      properties:
        id:
          type: integer
        front:
          type: string
        back:
          type: string
        type:
          type: string
        difficulty:
          $ref: '#/components/schemas/CardDifficulty'

    CardDifficulty:
      type: object
      properties:
        id:
          type: integer
        cardId:
          type: integer
        vocabularyScore:
          type: integer
          minimum: 0
          maximum: 30
        grammarScore:
          type: integer
          minimum: 0
          maximum: 40
        lengthScore:
          type: integer
          minimum: 0
          maximum: 20
        typeScore:
          type: integer
          minimum: 0
          maximum: 10
        totalDifficulty:
          type: integer
          minimum: 0
          maximum: 100
        calculatedAt:
          type: string
          format: date-time

    LevelProgression:
      type: object
      properties:
        levels:
          type: array
          items:
            type: object
            properties:
              level:
                type: integer
              xpRequired:
                type: integer
              difficultyRange:
                type: object
                properties:
                  min:
                    type: integer
                  max:
                    type: integer
              title:
                type: string
              description:
                type: string